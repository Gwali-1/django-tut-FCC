from django.core.exceptions import ValidationError
from django.utils.translation import gettext as _

class CaptialAndSymbolValidator:
    def __init__(self, number_of_capitals=1, number_of_symbols=2, symbols="[~!@#$%^&*()_+{}\":;'[]"):
        self.number_of_capitals = number_of_capitals
        self.number_of_symbols = number_of_symbols
        self.symbols = symbols

    def validate(self, password, user=None):
        capitals = [char for char in password if char.isupper()]
        symbols = [char for char in password if char in self.symbols]
        if len(capitals) < self.number_of_capitals:
            raise ValidationError(
                _("This password must contain at least %(min_length)d capital letters."),
                code='password_too_short',
                params={'min_length': self.number_of_capitals},
            )
        if len(symbols) < self.number_of_symbols:
            raise ValidationError(
                _("This password must contain at least %(min_length)d symbols."),
                code='password_too_short',
                params={'min_length': self.number_of_symbols},
            )

    def get_help_text(self):
        return _(
            "Your password must contain at least %(number_of_capitals)d capital letters and %(number_of_symbols) symbols."
            % {'number_of_capitals': self.number_of_capitals, 'number_of_symbols': self.number_of_symbols}
        )